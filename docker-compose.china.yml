version: '3.8'

services:
  # 数据库服务
  postgres:
    image: registry.cn-hangzhou.aliyuncs.com/library/postgres:15
    container_name: eyehealth-postgres
    environment:
      POSTGRES_DB: eyehealth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - eyehealth-network

  redis:
    image: registry.cn-hangzhou.aliyuncs.com/library/redis:7-alpine
    container_name: eyehealth-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eyehealth-network

  # 存储服务
  minio:
    image: registry.cn-hangzhou.aliyuncs.com/library/minio/minio:latest
    container_name: eyehealth-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - eyehealth-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eyehealth-backend
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/eyehealth
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - eyehealth-network

  # AI服务
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: eyehealth-ai-service
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - ./ai-service:/app
      - ai_models:/app/models
    networks:
      - eyehealth-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eyehealth-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_AI_SERVICE_URL=http://localhost:8000
    depends_on:
      - backend
      - ai-service
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - eyehealth-network

volumes:
  postgres_data:
  redis_data:
  minio_data:
  ai_models:

networks:
  eyehealth-network:
    driver: bridge

